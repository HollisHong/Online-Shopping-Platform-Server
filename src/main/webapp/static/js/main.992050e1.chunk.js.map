{"version":3,"sources":["logo.png","services/UserService.js","components/HomeComponent.js","components/LoginComponent.js","services/ProductService.js","components/ProductRowComponent.js","components/ProductTableComponent.js","components/MyProductRowComponent.js","components/MyProductTableComponent.js","components/ProfileComponent.js","components/SearchRowComponent.js","components/SearchTableComponent.js","services/AmazonService.js","containers/AmazonListContainer.js","components/RegisterComponent.js","containers/ProductListContainer.js","services/ReviewService.js","components/ReviewRowComponent.js","components/ReviewTableComponent.js","components/DetailsComponent.js","containers/DetailsContainer.js","components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","fetchProfile","fetch","method","credentials","then","response","json","findUserByID","uid","HomeComponent","state","currentUser","username","catch","e","setState","this","className","to","id","React","Component","LoginComponent","password","type","error","login","body","JSON","stringify","headers","props","history","push","htmlFor","onChange","target","value","placeholder","onClick","productId","product","userId","ProductRowComponent","render","productName","price","ProductTableComponent","user","products","map","key","MyProductRowComponent","details","editing","event","ProductService","deleteProduct","MyProductTableComponent","ProfileComponent","productList","productPrice","productDetail","birthday","email","likes","lover","loggedUserName","loggedUserId","watchedType","findAllProductByUserId","match","params","logout","update","updateLikes","addProduct","prevState","ProductToDelete","status","filter","title","console","log","parseInt","SearchRowComponent","asin","src","thumbnail","SearchTableComponent","replace","err","AmazonListContainer","searchTitle","undefined","AmazonService","prevProps","snapshot","RegisterComponent","register","ProductListContainer","newProductTitle","actualArrayOfProducts","pid","review","rid","ReviewRowComponent","editingContent","updateReview","ReviewService","content","deleteReview","ReviewTableComponent","reviews","addReview","did","DetailsComponent","brand","fulfilledBy","url","storeID","DetailsContainer","ReviewToDelete","HomePage","logo1","alt","width","path","exact","component","App","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.992050e1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.1b64cc74.png\";","export const fetchProfile = () =>\r\n    fetch(\"http://cs4550-20su1-group17-server.herokuapp.com/api/profile\", {\r\n        method: 'GET',\r\n        credentials: \"include\"\r\n    })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n\r\n\r\nexport const findUserByID = (uid) =>\r\n    fetch(`http://cs4550-20su1-group17-server.herokuapp.com/api/users/${uid}`, {\r\n    method: 'GET',\r\n    credentials: \"include\"\r\n})\r\n    .then(response => {\r\n        return response.json()\r\n    })","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {fetchProfile} from \"../services/UserService\";\r\n\r\n\r\nexport default class HomeComponent extends React.Component {\r\n    state = {\r\n        currentUser: {\r\n            username: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fetchProfile()\r\n            .catch(e => {})\r\n            .then(currentUser => {\r\n                if(currentUser) {\r\n                    this.setState({currentUser: currentUser})\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n          <div>\r\n            <h5>Designed by Group 17</h5>\r\n              {this.state.currentUser.username &&\r\n                  <h3>Welcome {this.state.currentUser.username}</h3>\r\n              }\r\n              <div className=\"list-group\">\r\n                  <Link className=\"list-group-item\" to='/search'>\r\n                      Search products on Amazon/Google\r\n                  </Link>\r\n                  <Link className=\"list-group-item\" to='/products'>\r\n                      Product List\r\n                  </Link>\r\n                  {\r\n                      !this.state.currentUser.username &&\r\n                      <Link className=\"list-group-item\" to='/login'>\r\n                          Login\r\n                      </Link>\r\n                  }\r\n                  {\r\n                      !this.state.currentUser.username &&\r\n                      <Link className=\"list-group-item\" to='/register'>\r\n                          Registration\r\n                      </Link>\r\n                  }\r\n                  {\r\n                      this.state.currentUser.username &&\r\n                      <Link className=\"list-group-item\" to={`/profile/${this.state.currentUser.id}`}>\r\n                          Profile\r\n                      </Link>\r\n                  }\r\n              </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class LoginComponent extends React.Component {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        type: '',\r\n        error: null\r\n    }\r\n    login = () => {\r\n        fetch(\"http://cs4550-20su1-group17-server.herokuapp.com/api/login\", {\r\n            body: JSON.stringify({\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n                type: this.state.type\r\n            }),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            credentials: \"include\"\r\n        }).then(response => response.json())\r\n            .catch(e => {\r\n                this.setState({\r\n                    error: 'Oops, that\\'s not a match.'\r\n                })\r\n            })\r\n            .then(currentUser => {\r\n                if(currentUser)\r\n                    this.props.history.push(`/profile/${currentUser.id}`)\r\n            })\r\n\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h1>Login</h1>\r\n                {\r\n                    this.state.error &&\r\n                    <div className=\"alert alert-danger\">\r\n                        {this.state.error}\r\n                    </div>\r\n                }\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"username\" className=\"col-sm-1 col-form-label\">\r\n                        Username: </label>\r\n                    <div className=\"col-sm-11\">\r\n                        <input\r\n                            onChange={(e) => this.setState({username: e.target.value})}\r\n                            className=\"form-control\"\r\n                            id=\"username\"\r\n                            placeholder=\"Alice\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-1 col-form-label\" htmlFor=\"password\">\r\n                        Password: </label>\r\n                    <div className=\"col-sm-11\">\r\n                        <input\r\n                            onChange={(e) => this.setState({password: e.target.value})}\r\n                            className=\"form-control\"\r\n                            id=\"password\"\r\n                            placeholder=\"123qwe#$%\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                    <button\r\n                        onClick={this.login}\r\n                        className=\"btn btn-primary\">\r\n                        Login\r\n                    </button>\r\n\r\n\r\n\r\n\r\n                    <Link to=\"/register\">\r\n                        <button className=\"btn btn-primary\">\r\n                            Sign up\r\n                        </button>\r\n                    </Link>\r\n\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","const createProduct = (uid, product) =>\r\n    fetch(\"http://cs4550-20su1-group17-server.herokuapp.com/api/users/\" + uid, {\r\n        method: 'POST',\r\n        body: JSON.stringify(product),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst updateProduct = (productId, product) =>\r\n    fetch(\"http://cs4550-20su1-group17-server.herokuapp.com/api/products/\" + productId, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(product),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst deleteProduct = (productId) =>\r\n    fetch(\"http://cs4550-20su1-group17-server.herokuapp.com/api/products/\" + productId, {\r\n        method: 'DELETE'\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst findProductById = (productId) =>\r\n    fetch(\"http://cs4550-20su1-group17-server.herokuapp.com/api/products/\" + productId)\r\n        .then(response => response.json())\r\n\r\nconst findAllProducts = () =>\r\n    fetch(\"http://cs4550-20su1-group17-server.herokuapp.com/api/products\")\r\n        .then(response =>\r\n                  response.json())\r\n\r\nconst findAllProductByUserId = (userId) =>\r\n    fetch(\"http://cs4550-20su1-group17-server.herokuapp.com/api/users/\"+ userId + \"/products\")\r\n        .then(response =>\r\n        response.json())\r\n\r\n\r\nexport default {\r\n    findAllProducts,\r\n    findProductById,\r\n    deleteProduct,\r\n    updateProduct,\r\n    createProduct,\r\n    findAllProductByUserId\r\n}\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ProductService from \"../services/ProductService\";\r\n\r\nexport default class ProductRowComponent extends React.Component {\r\n    state = {\r\n        product: this.props.product\r\n\r\n    }\r\n\r\n    render = () => (\r\n        <tr>\r\n            <td>\r\n                <Link to={`/search/${this.state.product.productName}`}>\r\n                    {this.state.product.productName}\r\n                </Link>\r\n            </td>\r\n            <td>{this.state.product.price}</td>\r\n            <td>{this.state.product.id}</td>\r\n            <td>\r\n                {this.props.type === 'buyer' &&\r\n                    <button>\r\n                        buy\r\n                    </button>\r\n                }\r\n                {this.props.type === 'dad' &&\r\n                <Link to='/login'>\r\n                    <button>buy</button>\r\n                    </Link>\r\n                }\r\n            </td>\r\n\r\n            {/*<td>*/}\r\n            {/*<button onClick={() => {ProductService.deleteProduct(this.state.product.id)}}>*/}\r\n            {/*    delete*/}\r\n            {/*</button>*/}\r\n            {/*</td>*/}\r\n\r\n        </tr>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport ProductRowComponent from \"./ProductRowComponent\";\r\nimport {fetchProfile} from \"../services/UserService\";\r\n\r\n\r\n\r\nexport default class ProductTableComponent\r\n    extends React.Component {\r\n\r\n    state = {\r\n        type: ''\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        fetchProfile()\r\n            .catch(e => {})\r\n            .then(user => {\r\n                if (user) {\r\n                    this.setState({\r\n                        type: user.type\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        type: 'dad'\r\n                    })\r\n                }\r\n            })}\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br/>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                        <th>Poster</th>\r\n                        <th>Options</th>\r\n                    </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                    {\r\n\r\n                        this.props.products.map(product =>\r\n                            <ProductRowComponent\r\n                                type={this.state.type}\r\n                                key={product.id}\r\n                                product={product}/>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ProductService from \"../services/ProductService\";\r\n\r\nexport default class MyProductRowComponent extends React.Component {\r\n    state = {\r\n        product: this.props.product,\r\n        price: '',\r\n        details: '',\r\n        productName: '',\r\n        editing: ''\r\n    }\r\n\r\n    render = () => (\r\n        <tr>\r\n            {this.state.editing &&\r\n            <td>\r\n                <input value={this.state.productName}\r\n                       placeholder={this.state.product.productName}\r\n                       onChange={(event) => this.setState({\r\n                           productName: event.target.value\r\n                       })}/>\r\n            </td>}\r\n\r\n            {this.state.editing &&\r\n            <td>\r\n                <input value={this.state.price}\r\n                       placeholder={this.state.product.price}\r\n                       onChange={(event) => this.setState({\r\n                           price: event.target.value\r\n                       })}/>\r\n\r\n            </td>}\r\n\r\n            {this.state.editing &&\r\n            <td>\r\n                <input value={this.state.details}\r\n                       placeholder={this.state.product.details}\r\n                       onChange={(event) => this.setState({\r\n                           details: event.target.value\r\n                       })}/>\r\n            </td>}\r\n\r\n            {this.state.editing === 'yes' &&\r\n            <td>\r\n                <button onClick={() => {\r\n                    ProductService.updateProduct(this.state.product.id, {\r\n                        price: this.state.price,\r\n                        productName: this.state.productName,\r\n                        details: this.state.details\r\n                    }).then(response => this.setState({\r\n                        editing: '',\r\n                        product: response\r\n                    }))\r\n\r\n                }}>\r\n                    Update\r\n                </button>\r\n                <button onClick={() => {\r\n                    this.props.deleteProduct(this.state.product)\r\n                }}>\r\n                    delete\r\n                </button>\r\n            </td>}\r\n\r\n            {!this.state.editing &&\r\n            <td>\r\n                <Link to={`/search/${this.state.product.productName}`}>\r\n                    {this.state.product.productName}\r\n                </Link>\r\n            </td>\r\n            }\r\n\r\n            {!this.state.editing &&\r\n            <td>\r\n                {this.state.product.price}\r\n            </td>\r\n            }\r\n\r\n            {!this.state.editing &&\r\n            <td>\r\n                {this.state.product.details}\r\n            </td>}\r\n\r\n            {!this.state.editing &&\r\n            <td>\r\n                <button onClick={() => this.setState({\r\n                    editing: 'yes'\r\n                })}>\r\n                    Edit\r\n                </button>\r\n            </td>}\r\n\r\n\r\n        </tr>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport MyProductRowComponent from \"./MyProductRowComponent\";\r\nimport {fetchProfile} from \"../services/UserService\";\r\n\r\n\r\n\r\nexport default class MyProductTableComponent\r\n    extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br/>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                        <th>Details</th>\r\n                        <th>Options</th>\r\n                    </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                    {\r\n\r\n                        this.props.products.map(product =>\r\n                            <MyProductRowComponent\r\n                                deleteProduct={this.props.deleteProduct}\r\n                                key={product.id}\r\n                                product={product}/>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ProductService from \"../services/ProductService\";\r\nimport {fetchProfile, findUserByID} from \"../services/UserService\";\r\nimport ProductTableComponent from \"./ProductTableComponent\";\r\nimport MyProductTableComponent from \"./MyProductTableComponent\";\r\nexport default class ProfileComponent extends React.Component {\r\n    state = {\r\n        productList: [],\r\n        currentUser: {\r\n            username: ''\r\n        },\r\n        username: '',\r\n        password: '',\r\n        type: '',\r\n        productName: '',\r\n        productPrice: '',\r\n        productDetail: '',\r\n        birthday: '',\r\n        email: 'default@gmail.com',\r\n        likes: '',\r\n        lover: '',\r\n        editing: '',\r\n        loggedUserName: '',\r\n        loggedUserId:'',\r\n        watchedType: ''\r\n    }\r\n\r\n    findAllProductByUserId = () =>\r\n        ProductService.findAllProductByUserId(this.props.match.params.uid)\r\n            .then(response =>\r\n                this.setState({productList: response}))\r\n\r\n    componentDidMount() {\r\n        fetchProfile()\r\n            .catch(e => {\r\n                this.props.history.push(`/profile/${this.props.match.params.uid}`)\r\n            })\r\n            .then(user => {\r\n                if (user) {\r\n                    if (user.id != this.props.match.params.uid) {\r\n                        findUserByID(this.props.match.params.uid).then(\r\n                            response => {\r\n                                this.setState(\r\n                                    {\r\n                                        watchedType: response.type,\r\n                                        currentUser: {username: response.username},\r\n                                        likes: response.likes,\r\n                                        loggedUserId: user.id,\r\n                                        loggedUserName: user.username\r\n                                    }\r\n                                )\r\n                            }\r\n                        )\r\n                    } else {\r\n                        this.setState({\r\n                            currentUser: user,\r\n                            username: user.username,\r\n                            password: user.password,\r\n                            type: user.type,\r\n                            email: user.email,\r\n                            birthday: user.birthday,\r\n                            likes: user.likes,\r\n                            lover: user.lover,\r\n                            loggedUserId: user.id,\r\n                            loggedUserName: user.username\r\n                        })\r\n                    }\r\n                } else {\r\n                    findUserByID(this.props.match.params.uid).then(\r\n                        response => {\r\n                            this.setState(\r\n                                {\r\n                                    likes: response.likes,\r\n                                    watchedType: response.type,\r\n                                    currentUser: {username: response.username},\r\n                                }\r\n                            )\r\n                        }\r\n                    )\r\n                }\r\n            })\r\n        this.findAllProductByUserId()\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if (prevState.productList !== this.state.productList) {\r\n    //\r\n    //     }\r\n    // }\r\n\r\n\r\n    logout = () => {\r\n        fetch(\"http://cs4550-20su1-group17-server.herokuapp.com/api/logout\", {\r\n            method: 'POST',\r\n            credentials: \"include\"\r\n        })\r\n            .then(response => this.props.history.push(\"/\"))\r\n\r\n    }\r\n\r\n    update = () => {\r\n        fetch(`http://cs4550-20su1-group17-server.herokuapp.com/api/profile/${this.props.match.params.uid}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                username: this.state.username,\r\n                email: this.state.email,\r\n                birthday: this.state.birthday,\r\n                password: this.state.password,\r\n                likes: this.state.likes,\r\n                lover: this.state.lover\r\n            }),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            credentials: \"include\"\r\n        })\r\n            .then(response => response.json())\r\n    }\r\n\r\n    updateLikes = () => {\r\n        fetch(`http://cs4550-20su1-group17-server.herokuapp.com/api/profile/${this.props.match.params.uid}/update`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                likes: this.state.likes,\r\n                lover: this.state.lover\r\n            }),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            credentials: \"include\"\r\n        })\r\n            .then(response => response.json())\r\n    }\r\n\r\n\r\n\r\n    addProduct = () =>\r\n        ProductService.createProduct(this.props.match.params.uid,\r\n            {\r\n                productName: this.state.productName,\r\n                price: this.state.productPrice,\r\n                details: this.state.productDetail,\r\n            }).then(response =>\r\n            this.setState((prevState) => {\r\n                return {\r\n                    productList: [\r\n                        ...prevState.productList,\r\n                        response\r\n                    ]\r\n                }\r\n            })\r\n        )\r\n\r\n\r\n    deleteProduct = (ProductToDelete) =>\r\n        ProductService.deleteProduct(ProductToDelete.id)\r\n            .then(status => this.setState((prevState) => {\r\n                return {\r\n                    productList: prevState\r\n                        .productList.filter(product => product !== ProductToDelete)\r\n                }\r\n            }))\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.currentUser.username !== this.state.loggedUserName &&\r\n                      this.state.watchedType === \"seller\" &&\r\n\r\n                      <div>\r\n                          <h3>This User's Selling List</h3>\r\n                          <ProductTableComponent\r\n                              products={this.state.productList}/>\r\n                      </div>\r\n                }\r\n\r\n                {this.state.currentUser.username !== this.state.loggedUserName &&\r\n                    this.state.watchedType == \"buyer\" &&\r\n                    <div>\r\n                    <h3>This User is a buyer!</h3>\r\n                    </div>\r\n                }\r\n\r\n\r\n                {this.state.loggedUserName&&\r\n                    this.state.currentUser.username === this.state.loggedUserName &&\r\n                <div>\r\n                    <h2>\r\n                        Username\r\n                    </h2>\r\n                    <input\r\n                        value={this.state.username}\r\n                        onChange={(e) => this.setState({username: e.target.value})}\r\n                        className=\"form-control\"/>\r\n                    <br/>\r\n                    <h2>\r\n                        User Password\r\n                    </h2>\r\n                    <input\r\n                        value={this.state.password}\r\n                        type={\"password\"}\r\n                        onChange={(e) => this.setState({password: e.target.value})}\r\n                        className=\"form-control\"/>\r\n\r\n                    <br/>\r\n\r\n                    <h2>\r\n                        User Email\r\n                    </h2>\r\n                    <input type=\"email\"\r\n                           className=\"form-control\"\r\n                           value={this.state.email}\r\n                           placeholder=\"li.tianq@husky.neu.edu\"\r\n                           title=\"The email address you use\"\r\n                           onChange={(e) => this.setState({email: e.target.value})}/>\r\n                    <br/>\r\n\r\n                    <h2>\r\n                        User Birthday\r\n                    </h2>\r\n                    <input type=\"date\"\r\n                           className=\"form-control\"\r\n                           value={this.state.birthday}\r\n                           title=\"The Date of birth for you\"\r\n                           onChange={(e) => this.setState({birthday: e.target.value})}/>\r\n                    <br/>\r\n\r\n                    <h3>You are a {this.state.type}</h3>\r\n                     <br/>\r\n\r\n                     <h3>likes: {this.state.likes}, Recent liker: {this.state.lover}</h3>\r\n\r\n                    <button\r\n                        onClick={this.update}\r\n                        className=\"btn btn-primary\">\r\n                        Update\r\n                    </button>\r\n                    <button\r\n                        className=\"btn btn-danger\"\r\n                        onClick={this.logout}>\r\n                        Sign out\r\n                    </button>\r\n                </div>\r\n                }\r\n\r\n                {this.state.loggedUserName&&\r\n                    this.state.type === 'seller' &&\r\n                    this.state.loggedUserId == this.props.match.params.uid &&\r\n                <div>\r\n\r\n                    <h2> Sell your product here! </h2>\r\n                    <input\r\n                        onChange={(event) => this.setState({\r\n                            productName: event.target.value\r\n                        })}\r\n                        value={this.state.productName}\r\n                        placeholder=\"Product Name\"/>\r\n                    <input\r\n                        onChange={(event) => this.setState({\r\n                            productPrice: event.target.value\r\n                        })}\r\n                        value={this.state.productPrice}\r\n                        placeholder=\"Product Price\"/>\r\n                    <input\r\n                        onChange={(event) => this.setState({\r\n                            productDetail: event.target.value\r\n                        })}\r\n                        value={this.state.productDetail}\r\n                        placeholder=\"Product Detail\"/>\r\n\r\n                    <button onClick={() => this.addProduct()}>\r\n                        Add Product\r\n                    </button>\r\n                    <div>\r\n                        <MyProductTableComponent\r\n                            deleteProduct={this.deleteProduct}\r\n                            products={this.state.productList}/>\r\n                    </div>\r\n\r\n                </div>\r\n                }\r\n\r\n\r\n\r\n\r\n                {this.state.loggedUserId != this.props.match.params.uid &&\r\n                 <div>\r\n                 <h3>Likes he/she has: {this.state.likes} </h3>\r\n                     {console.log(this.state.loggedUserName)}\r\n                 <button onClick={() => {\r\n                    this.setState({\r\n                        likes: parseInt(this.state.likes) + 1,\r\n                        lover: this.state.loggedUserName\r\n                    })\r\n                    this.updateLikes()\r\n                }}>\r\n                    like!\r\n                </button>\r\n                 </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {BrowserRouter, Link, Route} from \"react-router-dom\";\r\nexport default class SearchRowComponent extends React.Component {\r\n    state = {\r\n        product: this.props.product\r\n    }\r\n\r\n    render = () => (\r\n        <tr>\r\n            {console.log(this.props.product)}\r\n            <td>\r\n                <Link to={`/details/${this.state.product.asin}`}>\r\n                    {this.state.product.title}\r\n                </Link>\r\n            </td>\r\n            <td>{this.state.product.price}</td>\r\n            <td><img src = {this.state.product.thumbnail}/></td>\r\n\r\n        </tr>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport SearchRowComponent from \"./SearchRowComponent\";\r\n\r\n\r\nexport default class SearchTableComponent\r\n    extends React.Component {\r\n\r\n    state = {\r\n        products: []\r\n    }\r\n\r\n    render() {\r\n            return (\r\n                <div>\r\n                    <br/>\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Title</th>\r\n                            <th>Price</th>\r\n                            <th>Poster</th>\r\n                        </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                        {\r\n\r\n                            this.props.products.map(product =>\r\n                                <SearchRowComponent\r\n                                    key={product.asin}\r\n                                    product={product}/>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )\r\n        }\r\n}\r\n","\r\n\r\nexport const searchProductByTitle = (title) =>\r\n    fetch(\"https://amazon-product-reviews-keywords.p.rapidapi.com/product/search?country=US&keyword=iphone\"\r\n        .replace('iphone', title), {\r\n        \"method\": \"GET\",\r\n            \"headers\": {\r\n            \"x-rapidapi-host\": \"amazon-product-reviews-keywords.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"d84db33b52msh35262445c420772p1ec9bfjsn0aa4c6bef814\"\r\n        }\r\n    })\r\n    .then(response => {\r\n        return response.json()\r\n    })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\nexport const findProductByASIN = (asin) => {\r\n    return fetch(\"https://amazon-product-reviews-keywords.p.rapidapi.com/product/details?country=US&asin=B01LWAM0V1\"\r\n        .replace('B01LWAM0V1', asin), {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n            \"x-rapidapi-host\": \"amazon-product-reviews-keywords.p.rapidapi.com\",\r\n            \"x-rapidapi-key\": \"d84db33b52msh35262445c420772p1ec9bfjsn0aa4c6bef814\"\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\n\r\nexport default {\r\n    searchProductByTitle,\r\n    findProductByASIN\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport SearchTableComponent from \"../components/SearchTableComponent\";\r\nimport AmazonService from \"../services/AmazonService\";\r\n\r\nclass AmazonListContainer\r\n    extends React.Component\r\n{\r\n    state = {\r\n        searchTitle: this.props.match.params.title,\r\n        products: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        (this.state.searchTitle !== undefined) &&\r\n        AmazonService.searchProductByTitle(this.state.searchTitle)\r\n            .then(response =>\r\n                // console.log(response)\r\n                this.setState({\r\n                    products:response.products\r\n                })\r\n            )\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.match.params.title !== this.props.match.params.title) {\r\n            AmazonService.searchProductByTitle(this.state.searchTitle)\r\n                .then(response =>\r\n                    this.setState({\r\n                        products:response.products\r\n                    }))\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h2>Search Products on Amazon</h2>\r\n                <input\r\n                    onChange={(event) => this.setState({\r\n                        searchTitle: event.target.value\r\n                    })}\r\n                    placeholder=\"Input Product Title\"/>\r\n                <button>\r\n                    <Link to={`/search/${this.state.searchTitle}`}>\r\n                        Search\r\n                    </Link>\r\n                </button>\r\n                <br/>\r\n\r\n                <div>\r\n                    <SearchTableComponent\r\n                        products={this.state.products}/>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AmazonListContainer\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class RegisterComponent extends React.Component {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        type: 'seller',\r\n        error: null\r\n    }\r\n    register = () => {\r\n        fetch(\"http://cs4550-20su1-group17-server.herokuapp.com/api/register\", {\r\n            body: JSON.stringify({username: this.state.username,\r\n                password: this.state.password,\r\n                type: this.state.type}),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            credentials: \"include\"\r\n        }).then(response => response.json())\r\n            .catch(e => {\r\n                this.setState({\r\n                                  error: 'Unable to register'\r\n                              })\r\n            })\r\n            .then(currentUser => {\r\n                if(currentUser) {\r\n                    this.props.history.push(`/profile/${currentUser.id}`)\r\n                }\r\n            })\r\n    }\r\n\r\n    //         .then(response => response.json())\r\n    //         .then(currentUser => this.props.history.push(\"/profile\"))\r\n    // }\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h1>Register</h1>\r\n                {\r\n                    this.state.error &&\r\n                    <div className=\"alert alert-danger\">\r\n                        {this.state.error}\r\n                    </div>\r\n                }\r\n                <input\r\n                    onChange={(e) => this.setState({username: e.target.value})}\r\n                    className=\"form-control\"/>\r\n                <input\r\n                    onChange={(e) => this.setState({password: e.target.value})}\r\n                    className=\"form-control\"/>\r\n                <select onChange={(e) => this.setState({type: e.target.value})}>\r\n                    <option value=\"seller\">\r\n                        seller\r\n                    </option>\r\n                    <option value=\"buyer\">\r\n                        buyer\r\n                    </option>\r\n                </select>\r\n                <br/>\r\n                <button\r\n                    onClick={this.register}\r\n                    className=\"btn btn-primary\">\r\n                    Register\r\n                </button>\r\n                <Link to=\"/login\">Sign in</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ProductService from \"../services/ProductService\";\r\nimport ProductTableComponent from \"../components/ProductTableComponent\";\r\n\r\n\r\nclass ProductListContainer\r\n    extends React.Component\r\n{\r\n    state = {\r\n        products: [],\r\n        newProductTitle: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        ProductService.findAllProducts()\r\n            .then(actualArrayOfProducts =>\r\n                      this.setState({\r\n                                        products: actualArrayOfProducts\r\n                                    }))\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if(prevProps.match.params.layout !== this.props.match.params.layout) {\r\n    //         this.setState({\r\n    //                           layout: this.props.match.params.layout\r\n    //                       })\r\n    //     }\r\n    // }\r\n\r\n\r\n\r\n    // addProduct = (productName) =>\r\n    //     ProductService.createProduct({\r\n    //         productName: productName,\r\n    //         price: 1.0,\r\n    //         details: \"cjsysb\"\r\n    //\r\n    //     })\r\n    //         .then(theActualNewProduct =>\r\n    //                   this.setState((prevState) => {\r\n    //                       return {\r\n    //                           products: [\r\n    //                               ...prevState.products,\r\n    //                               theActualNewProduct\r\n    //                           ]\r\n    //                       }\r\n    //                   }))\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n\r\n            <div>\r\n                <h2>Product List</h2>\r\n                <ProductTableComponent\r\n                    products={this.state.products}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductListContainer\r\n","const createReview = (pid, review) =>\r\n    fetch(`http://cs4550-20su1-group17-server.herokuapp.com/api/products/${pid}/reviews`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(review),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\n\r\nconst findReviewsByProductId = (pid) =>\r\n    fetch(`http://cs4550-20su1-group17-server.herokuapp.com/api/products/${pid}/reviews`,\r\n        {\r\n            method: 'GET',\r\n        })\r\n        .then(response => response.json())\r\n\r\nconst updateReview = (rid, review) =>\r\n    fetch(`http://cs4550-20su1-group17-server.herokuapp.com/api/reviews/${rid}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(review),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst deleteReview = (rid) =>\r\n    fetch(`http://cs4550-20su1-group17-server.herokuapp.com/api/reviews/${rid}`, {\r\n        method: 'DELETE'\r\n    })\r\n        .then(response => response.json())\r\n\r\n\r\n\r\n\r\nexport default {\r\n    createReview,\r\n    findReviewsByProductId,\r\n    updateReview,\r\n    deleteReview\r\n}\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {fetchProfile, findUserByID} from \"../services/UserService\";\r\n\r\nimport ReviewService from \"../services/ReviewService\";\r\n\r\nexport default class ReviewRowComponent extends React.Component {\r\n    state = {\r\n        review: this.props.review,\r\n        username:'',\r\n        currentUser: {\r\n            username: ''\r\n        },\r\n        editing: '',\r\n        editingContent : ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        findUserByID(this.state.review.uid).then(\r\n            response =>\r\n                this.setState({\r\n                username: response.username\r\n            })\r\n        )\r\n\r\n        fetchProfile()\r\n            .catch(e => {})\r\n            .then(user => {\r\n                if (user) {\r\n                    this.setState({\r\n                    currentUser: user}\r\n                    )}})\r\n    }\r\n\r\n    updateReview = () =>\r\n        ReviewService.updateReview(\r\n            this.state.review.id,\r\n            {\r\n                ...this.state.review,\r\n                content: this.state.editingContent\r\n            })\r\n            .then(response => this.setState({\r\n                editing: '',\r\n                review: response\r\n                }))\r\n\r\n\r\n\r\n    render = () => (\r\n        <tr>\r\n\r\n            <td>\r\n                <Link to={`/profile/${this.state.review.uid}`}>\r\n                    {this.state.username}\r\n                </Link>\r\n            </td>\r\n            {!this.state.editing && <td>{this.state.review.content}</td>}\r\n\r\n            {!this.state.editing &&\r\n            <td>\r\n                {\r\n                    this.state.currentUser.id === this.state.review.uid &&\r\n                    <button onClick={() => this.setState({\r\n                        editing: 'yes'\r\n                    })}>\r\n                        Edit\r\n                    </button>\r\n                }\r\n\r\n                {\r\n                    this.state.currentUser.id !== this.state.review.uid &&\r\n                    <h6>You can't modify this review</h6>\r\n                }\r\n            </td>}\r\n\r\n            {this.state.editing === 'yes' &&\r\n            <td>\r\n                <input value={this.editingContent}\r\n                       placeholder={this.state.review.content}\r\n                       onChange={(event) => this.setState({\r\n                           editingContent: event.target.value\r\n                           })\r\n                       }/>\r\n            </td>}\r\n            {this.state.editing === 'yes' &&\r\n                <td>\r\n                <button onClick={() => this.updateReview()}>\r\n                update\r\n                </button>\r\n                <button onClick={() => this.props.deleteReview(this.state.review)}>\r\n                delete\r\n                </button>\r\n                </td>\r\n            }\r\n        </tr>\r\n\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport ReviewRowComponent from \"./ReviewRowComponent\";\r\nimport {fetchProfile} from \"../services/UserService\";\r\nimport ReviewService from \"../services/ReviewService\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default class ReviewTableComponent\r\n    extends React.Component {\r\n\r\n    state = {\r\n        reviews: [],\r\n        review: '',\r\n        currentUser: {\r\n            id: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetchProfile()\r\n            .catch(e => {})\r\n            .then(currentUser => {\r\n                if(currentUser) {\r\n                    this.setState({currentUser: currentUser})\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    addReview = () =>\r\n        ReviewService.createReview(this.props.did,\r\n            {\r\n                uid: this.state.currentUser.id,\r\n                content: this.state.review\r\n            })\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br/>\r\n                <h3>\r\n                    Review from local Database\r\n                </h3>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>User Name</th>\r\n                        <th>Review</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                    {\r\n                        this.props.reviews.map(review =>\r\n                            <ReviewRowComponent\r\n                                deleteReview={this.props.deleteReview}\r\n                                key={review.id}\r\n                                review={review}/>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <div>\r\n                    <h3>Add your review here</h3>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        onChange={(event) => this.setState({\r\n                            review: event.target.value\r\n                        })}\r\n                        value={this.state.review}\r\n                        placeholder=\"This product is awesome\"/>\r\n\r\n                    {\r\n                        this.state.currentUser.id &&\r\n                        <button onClick={() => this.addReview()}>\r\n                            Add Review\r\n                        </button>\r\n                    }\r\n\r\n                    {\r\n                        !this.state.currentUser.id &&\r\n\r\n                        <Link to='/login'>\r\n                            <button className={\"btn btn-primary\"}>\r\n                                Login to review\r\n                            </button>\r\n                        </Link>\r\n\r\n                    }\r\n\r\n\r\n                </div>\r\n\r\n\r\n                <br/>\r\n                <br/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {fetchProfile} from \"../services/UserService\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class DetailsComponent extends React.Component {\r\n    state = {\r\n        product: this.props.product,\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div>\r\n                    {console.log(this.props.product)}\r\n\r\n                    <h4>Title: </h4>\r\n                    <h5>{this.state.product.title}</h5>\r\n\r\n                    <br/>\r\n\r\n                    <h4>Brand: </h4>\r\n                    <h5>{this.state.product.brand}</h5>\r\n                    <br/>\r\n\r\n                    <h4>FulfilledBy: </h4>\r\n                    <h5>{this.state.product.fulfilledBy}</h5>\r\n                    <br/>\r\n\r\n                    <h4>Url: </h4>\r\n                    <h5>{this.state.product.url}</h5>\r\n                    <br/>\r\n\r\n                    <h4>Price Details: </h4>\r\n                    <h5>{JSON.stringify(this.state.product.price)}</h5>\r\n                    <br/>\r\n\r\n                    <h4>StoreID: </h4>\r\n                    <h5>{this.state.product.storeID}</h5>\r\n                    <br/>\r\n\r\n                    <h4>Review: </h4>\r\n                    <h5>{JSON.stringify(this.state.product.reviews)}</h5>\r\n\r\n                    {console.log(this.state.product)}\r\n                    {/*{this.props.detailFromAmazon.reviews}*/}\r\n\r\n                    {/*<img src = {this.props.detailFromAmazon.images.get(1)}/>*/}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nimport ReviewService from \"../services/ReviewService\";\r\nimport ReviewTableComponent from \"../components/ReviewTableComponent\";\r\nimport DetailsComponent from \"../components/DetailsComponent\";\r\nimport AmazonService from \"../services/AmazonService\";\r\nexport default class DetailsContainer\r\n    extends React.Component\r\n{\r\n    state = {\r\n        product: [],\r\n        reviews: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        AmazonService.findProductByASIN(this.props.match.params.did)\r\n            .then(response =>\r\n                    this.setState({\r\n                        product: response.product}))\r\n\r\n        ReviewService.findReviewsByProductId(this.props.match.params.did)\r\n            .then(reviews =>\r\n                this.setState({\r\n                    reviews: reviews\r\n                }))\r\n    }\r\n\r\n\r\n\r\n\r\n    deleteReview = (ReviewToDelete) =>\r\n        ReviewService.deleteReview(ReviewToDelete.id)\r\n            .then(response => this.setState(prevState => ({\r\n                reviews: prevState.reviews.filter(review => review !== ReviewToDelete)\r\n                }))\r\n            )\r\n\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if (prevProps.match.params.title !== this.props.match.params.title) {\r\n    //         AmazonService.searchProductByTitle(this.state.searchTitle)\r\n    //             .then(response =>\r\n    //                 this.setState({\r\n    //                     products:response\r\n    //                 }))\r\n    //     }\r\n    // }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h2>Details on Amazon</h2>\r\n                <br/>\r\n\r\n                <div>\r\n                    <DetailsComponent\r\n                        key={this.state.product.url}\r\n                        product={this.state.product}/>\r\n                </div>\r\n\r\n                <br/>\r\n                <div>\r\n                    {console.log(this.state.reviews)}\r\n                    <ReviewTableComponent\r\n                        deleteReview={this.deleteReview}\r\n                        did={this.props.match.params.did}\r\n                        reviews={this.state.reviews}/>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport logo1 from '../logo.png'\r\nimport {BrowserRouter, Link, Route} from \"react-router-dom\";\r\nimport HomeComponent from \"./HomeComponent\";\r\nimport LoginComponent from \"./LoginComponent\";\r\nimport ProfileComponent from \"./ProfileComponent\";\r\nimport SearchTableComponent from \"./SearchTableComponent\";\r\nimport AmazonListContainer from \"../containers/AmazonListContainer\";\r\nimport RegisterComponent from \"./RegisterComponent\";\r\nimport ProductListContainer from \"../containers/ProductListContainer\";\r\nimport DetailsContainer from \"../containers/DetailsContainer\";\r\n\r\nclass HomePage extends React.Component {\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <div className=\"container\">\r\n                    <div>\r\n                        {/*<h1>TAOBAO</h1>*/}\r\n                        <br/>\r\n                        <Link to=\"/home\">\r\n                            <img src={logo1} className=\"App-logo float-md-none\" alt=\"logo\" width={\"150\"}/>\r\n                        </Link>\r\n                        <br/>\r\n                        <Link className={\"float-right\"}\r\n                              to=\"/home\">\r\n                            <button>home</button>\r\n                        </Link>\r\n                        <br/>\r\n                    </div>\r\n\r\n                    <Route\r\n                        path={['/', '/home']}\r\n                        exact={true}\r\n                        component={HomeComponent}\r\n                    />\r\n\r\n                    <Route\r\n                        path={'/details/:did'}\r\n                        exact={true}\r\n                        component={DetailsContainer}\r\n                    />\r\n\r\n                    <Route\r\n                        path={'/login'}\r\n                        exact={true}\r\n                        component={LoginComponent}\r\n                    />\r\n\r\n                    <Route\r\n                        path={['/search', '/search/:title']}\r\n                        exact={true}\r\n                        component={AmazonListContainer}\r\n                    />\r\n\r\n                    <Route\r\n                        path='/products'\r\n                        exact={true}\r\n                        component={ProductListContainer}\r\n                    />\r\n\r\n                    <Route\r\n                        path='/register'\r\n                        exact={true}\r\n                        component={RegisterComponent}\r\n                    />\r\n\r\n                    <Route\r\n                        path={['/profile', '/profile/:uid']}\r\n                        exact={true}\r\n                        component={ProfileComponent}\r\n                    />\r\n\r\n                    {/*<Route*/}\r\n                    {/*    path={['/editor/course/:courseId', '/editor/course/:courseId/modules/:moduleId',*/}\r\n                    {/*        '/editor/course/:courseId/modules/:moduleId/lessons/:lessonId',*/}\r\n                    {/*        '/editor/course/:courseId/modules/:moduleId/lessons/:lessonId/topics/:topicId']}*/}\r\n                    {/*    exact={true}*/}\r\n                    {/*    component={CourseEditorComponent}/>*/}\r\n\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage\r\n","import React from 'react';\r\nimport HomePage from \"./components/HomePage\";\r\n\r\nfunction App() {\r\n  return (\r\n      <div className=\"container\">\r\n        <HomePage/>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}